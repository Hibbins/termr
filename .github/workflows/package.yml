name: Build Packages

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-packages:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.10']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install VLC (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y vlc
    
    - name: Install VLC (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install vlc
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    - name: Build Python wheel
      run: |
        python -m build
    
    - name: Build Debian package (Ubuntu only)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get install -y devscripts debhelper dh-python
        dpkg-buildpackage -b -us -uc
    
    - name: Upload Python wheel
      uses: actions/upload-artifact@v3
      with:
        name: termr-wheel-${{ matrix.os }}
        path: dist/*.whl
    
    - name: Upload Debian package
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v3
      with:
        name: termr-debian-${{ matrix.os }}
        path: ../termr_*.deb
    
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/*.whl
          ../termr_*.deb
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 